// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/erikrios/reog-apps-apis/entity"
	mock "github.com/stretchr/testify/mock"
)

// PropertyRepository is an autogenerated mock type for the PropertyRepository type
type PropertyRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, id
func (_m *PropertyRepository) Delete(ctx context.Context, id string) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Insert provides a mock function with given fields: ctx, _a1
func (_m *PropertyRepository) Insert(ctx context.Context, _a1 entity.Property) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.Property) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: ctx, id, _a2
func (_m *PropertyRepository) Update(ctx context.Context, id string, _a2 entity.Property) error {
	ret := _m.Called(ctx, id, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, entity.Property) error); ok {
		r0 = rf(ctx, id, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
